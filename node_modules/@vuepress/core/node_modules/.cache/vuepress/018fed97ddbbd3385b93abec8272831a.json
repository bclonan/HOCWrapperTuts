{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\vuepress\\tutorials\\UseVueComponents.md?vue&type=template&id=c0f0a13c&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\vuepress\\tutorials\\UseVueComponents.md","mtime":1553960179178},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"h2\", { attrs: { id: \"browser-api-access-restrictions\" } }, [\n        _vm._v(\"Browser API Access Restrictions\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Because VuePress applications are server-rendered in Node.js when generating static builds, any Vue usage must conform to the \"\n        ),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://ssr.vuejs.org/en/universal.html\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"universal code requirements\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\". In short, make sure to only access Browser / DOM APIs in \"),\n        _c(\"code\", [_vm._v(\"beforeMount\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"mounted\")]),\n        _vm._v(\" hooks.\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"If you are using or demoing components that are not SSR friendly (for example containing custom directives), you can wrap them inside the built-in \"\n        ),\n        _c(\"code\", [_vm._v(\"<ClientOnly>\")]),\n        _vm._v(\" component:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"ClientOnly\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"NonSSRFriendlyComponent\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"</\")]\n                ),\n                _vm._v(\"ClientOnly\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"Note this does not fix components or libraries that access Browser APIs \"\n        ),\n        _c(\"strong\", [_vm._v(\"on import\")]),\n        _vm._v(\n          \" - in order to use code that assumes a browser environment on import, you need to dynamically import them in proper lifecycle hooks:\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"script\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token script\" } }, [\n              _c(\n                \"span\",\n                { pre: true, attrs: { class: \"token language-javascript\" } },\n                [\n                  _vm._v(\"\\n\"),\n                  _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                    _vm._v(\"export\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                    _vm._v(\"default\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"{\")]\n                  ),\n                  _vm._v(\"\\n  \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token function\" } },\n                    [_vm._v(\"mounted\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"(\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\")\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"{\")]\n                  ),\n                  _vm._v(\"\\n    \"),\n                  _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n                    _vm._v(\"import\")\n                  ]),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"(\")]\n                  ),\n                  _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n                    _vm._v(\"'./lib-that-access-window-on-import'\")\n                  ]),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\")\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\".\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token function\" } },\n                    [_vm._v(\"then\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"(\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token parameter\" } },\n                    [_vm._v(\"module\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token operator\" } },\n                    [_vm._v(\"=>\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"{\")]\n                  ),\n                  _vm._v(\"\\n      \"),\n                  _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n                    _vm._v(\"// use code\")\n                  ]),\n                  _vm._v(\"\\n    \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"}\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\")\")]\n                  ),\n                  _vm._v(\"\\n  \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"}\")]\n                  ),\n                  _vm._v(\"\\n\"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\"}\")]\n                  ),\n                  _vm._v(\"\\n\")\n                ]\n              )\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"</\")]\n                ),\n                _vm._v(\"script\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"templating\" } }, [_vm._v(\"Templating\")]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"interpolation\" } }, [_vm._v(\"Interpolation\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Each markdown file is first compiled into HTML and then passed on as a Vue component to \"\n        ),\n        _c(\"code\", [_vm._v(\"vue-loader\")]),\n        _vm._v(\". This means you can use Vue-style interpolation in text:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Input\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n          _c(\"code\", [_vm._v(\"{{ 1 + 1 }}\\n\")])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Output\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-text\" }, [\n        _c(\"pre\", [_c(\"code\", [_vm._v(_vm._s(1 + 1))])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"directives\" } }, [_vm._v(\"Directives\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"Directives also work:\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Input\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"span\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"v-for\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"i in 3\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"{{ i }} \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"</\")]\n                ),\n                _vm._v(\"span\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Output\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-text\" }, [\n        _c(\"pre\", [\n          _c(\n            \"code\",\n            _vm._l(3, function(i) {\n              return _c(\"span\", [_vm._v(_vm._s(i) + \" \")])\n            }),\n            0\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"access-to-site-page-data\" } }, [\n        _vm._v(\"Access to Site & Page Data\")\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"p\",\n        [\n          _vm._v(\n            \"The compiled component does not have any private data but does have access to the \"\n          ),\n          _c(\n            \"router-link\",\n            {\n              attrs: {\n                to:\n                  \"/vuepress/tutorials/custom-themes.html#site-and-page-metadata\"\n              }\n            },\n            [_vm._v(\"site metadata\")]\n          ),\n          _vm._v(\". For example:\")\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Input\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n          _c(\"code\", [_vm._v(\"{{ $page }}\\n\")])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Output\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-json extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-json\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"path\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"/using-vue.html\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"title\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"Using Vue in Markdown\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token property\" } }, [\n              _vm._v('\"frontmatter\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"escaping\" } }, [_vm._v(\"Escaping\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"By default, fenced code blocks are automatically wrapped with \"\n        ),\n        _c(\"code\", [_vm._v(\"v-pre\")]),\n        _vm._v(\n          \". If you want to display raw mustaches or Vue-specific syntax inside inline code snippets or plain text, you need to wrap a paragraph with the \"\n        ),\n        _c(\"code\", [_vm._v(\"v-pre\")]),\n        _vm._v(\" custom container:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Input\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n          _c(\"code\", [\n            _vm._v(\"::: v-pre\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token code keyword\" } }, [\n              _vm._v(\"`{{ This will be displayed as-is }}`\")\n            ]),\n            _vm._v(\"\\n:::\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Output\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { pre: true }, [\n        _c(\"p\", [_c(\"code\", [_vm._v(\"{{ This will be displayed as-is }}\")])])\n      ]),\n      _c(\"h2\", { attrs: { id: \"using-components\" } }, [\n        _vm._v(\"Using Components\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"Any \"),\n        _c(\"code\", [_vm._v(\"*.vue\")]),\n        _vm._v(\" files found in \"),\n        _c(\"code\", [_vm._v(\".vuepress/components\")]),\n        _vm._v(\" are automatically registered as \"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"https://vuejs.org/v2/guide/components-registration.html#Global-Registration\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"global\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\", \"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href:\n                \"https://vuejs.org/v2/guide/components-dynamic-async.html#Async-Components\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"async\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\" components. For example:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \".\\n└─ .vuepress\\n   └─ components\\n      ├─ demo-1.vue\\n      ├─ OtherComponent.vue\\n      └─ Foo\\n         └─ Bar.vue\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"Inside any markdown file you can then directly use the components (names are inferred from filenames):\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"demo-1\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"OtherComponent\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"Foo-Bar\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"demo-1\"),\n      _vm._v(\" \"),\n      _c(\"OtherComponent\"),\n      _vm._v(\" \"),\n      _c(\"Foo-Bar\"),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"warning custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"IMPORTANT\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"Make sure a custom component's name either contains a hyphen or is in PascalCase. Otherwise it will be treated as an inline element and wrapped inside a \"\n          ),\n          _c(\"code\", [_vm._v(\"<p>\")]),\n          _vm._v(\" tag, which will lead to hydration mismatch because \"),\n          _c(\"code\", [_vm._v(\"<p>\")]),\n          _vm._v(\" does not allow block elements to be placed inside it.\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"using-components-in-headers\" } }, [\n        _vm._v(\"Using Components In Headers\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"You can use Vue components in the headers, but note the difference between the following two ways:\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"markdown\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"Output HTML\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"Parsed Header\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"pre\", { pre: true }, [\n                _c(\"code\", [_vm._v(\" # text <Tag/> \")])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", [_c(\"code\", [_vm._v(\"<h1>text <Tag/></h1>\")])]),\n            _vm._v(\" \"),\n            _c(\"td\", [_c(\"code\", [_vm._v(\"text\")])])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [\n              _c(\"pre\", { pre: true }, [\n                _c(\"code\", [_vm._v(\" # text `<Tag/>` \")])\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", [\n              _c(\"code\", [_vm._v(\"<h1>text <code>&lt;Tag/&gt;</code></h1>\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", [_c(\"code\", [_vm._v(\"text <Tag/>\")])])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"The HTML wrapped by \"),\n        _c(\"code\", [_vm._v(\"<code>\")]),\n        _vm._v(\n          \" will be displayed as is, only the HTML that is not wrapped will be parsed by Vue.\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"tip custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n        _vm._v(\" \"),\n        _c(\n          \"p\",\n          [\n            _vm._v(\"The output HTML is accomplished by \"),\n            _c(\n              \"a\",\n              {\n                attrs: {\n                  href: \"https://github.com/markdown-it/markdown-it\",\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\"\n                }\n              },\n              [_vm._v(\"markdown-it\"), _c(\"OutboundLink\")],\n              1\n            ),\n            _vm._v(\n              \", while the parsed headers are done by VuePress, and used for the \"\n            ),\n            _c(\n              \"router-link\",\n              { attrs: { to: \"/vuepress/default-theme-config/#sidebar\" } },\n              [_vm._v(\"sidebar\")]\n            ),\n            _vm._v(\" and the document title.\")\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"using-pre-processors\" } }, [\n        _vm._v(\"Using Pre-processors\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"VuePress has built-in webpack config for the following pre-processors: \"\n        ),\n        _c(\"code\", [_vm._v(\"sass\")]),\n        _vm._v(\", \"),\n        _c(\"code\", [_vm._v(\"scss\")]),\n        _vm._v(\", \"),\n        _c(\"code\", [_vm._v(\"less\")]),\n        _vm._v(\", \"),\n        _c(\"code\", [_vm._v(\"stylus\")]),\n        _vm._v(\" and \"),\n        _c(\"code\", [_vm._v(\"pug\")]),\n        _vm._v(\n          \". All you need to do is installing the corresponding dependencies. For example, to enable \"\n        ),\n        _c(\"code\", [_vm._v(\"sass\")]),\n        _vm._v(\", install the following in your project:\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"yarn\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"add\")\n            ]),\n            _vm._v(\" -D sass-loader node-sass\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"Now you can use the following in markdown and theme components:\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"style\")\n              ]),\n              _vm._v(\" \"),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-name\" } }, [\n                _vm._v(\"lang\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token attr-value\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"=\")]\n                ),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                ),\n                _vm._v(\"sass\"),\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v('\"')]\n                )\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token style\" } }, [\n              _c(\n                \"span\",\n                { pre: true, attrs: { class: \"token language-css\" } },\n                [\n                  _vm._v(\"\\n.title\\n  \"),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token property\" } },\n                    [_vm._v(\"font-size\")]\n                  ),\n                  _c(\n                    \"span\",\n                    { pre: true, attrs: { class: \"token punctuation\" } },\n                    [_vm._v(\":\")]\n                  ),\n                  _vm._v(\" 20px\\n\")\n                ]\n              )\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"</\")]\n                ),\n                _vm._v(\"style\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\">\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\"Using \"),\n        _c(\"code\", [_vm._v('<template lang=\"pug\">')]),\n        _vm._v(\" requires installing \"),\n        _c(\"code\", [_vm._v(\"pug\")]),\n        _vm._v(\" and \"),\n        _c(\"code\", [_vm._v(\"pug-plain-loader\")]),\n        _vm._v(\":\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"yarn\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"add\")\n            ]),\n            _vm._v(\" -D pug pug-plain-loader\\n\")\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"tip custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"TIP\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\"If you are a Stylus user, you don't need to install \"),\n          _c(\"code\", [_vm._v(\"stylus\")]),\n          _vm._v(\" and \"),\n          _c(\"code\", [_vm._v(\"stylus-loader\")]),\n          _vm._v(\" in your project because VuePress uses Stylus internally.\")\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"p\",\n          [\n            _vm._v(\n              \"For pre-processors that do not have built-in webpack config support, you will need to \"\n            ),\n            _c(\n              \"router-link\",\n              { attrs: { to: \"/vuepress/config/#configurewebpack\" } },\n              [_vm._v(\"extend the internal webpack config\")]\n            ),\n            _vm._v(\" in addition to installing the necessary dependencies.\")\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"script-style-hoisting\" } }, [\n        _vm._v(\"Script & Style Hoisting\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Sometimes you may need to apply some JavaScript or CSS only to the current page. In those cases you can directly write root-level \"\n        ),\n        _c(\"code\", [_vm._v(\"<script>\")]),\n        _vm._v(\" or \"),\n        _c(\"code\", [_vm._v(\"<style>\")]),\n        _vm._v(\n          \" blocks in the markdown file, and they will be hoisted out of the compiled HTML and used as the \"\n        ),\n        _c(\"code\", [_vm._v(\"<script>\")]),\n        _vm._v(\" and \"),\n        _c(\"code\", [_vm._v(\"<style>\")]),\n        _vm._v(\" blocks for the resulting Vue single-file component.\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", { staticClass: \"demo\", class: _vm.$style.example }),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"built-in-components\" } }, [\n        _vm._v(\"Built-In Components\")\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"outboundlink\" } },\n        [_vm._v(\"OutboundLink \"), _c(\"Badge\", { attrs: { text: \"stable\" } })],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"p\",\n        [\n          _vm._v(\"It(\"),\n          _c(\"OutboundLink\"),\n          _vm._v(\n            \") is used to indicate that this is an external link. In VuePress this component have been followed by every external link.\"\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"clientonly\" } },\n        [_vm._v(\"ClientOnly \"), _c(\"Badge\", { attrs: { text: \"stable\" } })],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"See \"),\n        _c(\"a\", { attrs: { href: \"#browser-api-access-restrictions\" } }, [\n          _vm._v(\"Browser API Access Restrictions\")\n        ]),\n        _vm._v(\".\")\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"content\" } },\n        [\n          _vm._v(\"Content \"),\n          _c(\"Badge\", { attrs: { text: \"beta\", type: \"warn\" } })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [_c(\"strong\", [_vm._v(\"Props\")]), _vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [_c(\"code\", [_vm._v(\"custom\")]), _vm._v(\" - boolean\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_c(\"strong\", [_vm._v(\"Usage\")]), _vm._v(\"：\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"p\",\n        [\n          _vm._v(\"The compiled content of the current \"),\n          _c(\"code\", [_vm._v(\".md\")]),\n          _vm._v(\n            \" file being rendered. This will be very useful when you use \"\n          ),\n          _c(\n            \"router-link\",\n            {\n              attrs: {\n                to:\n                  \"/vuepress/default-theme-config/#custom-layout-for-specific-pages\"\n              }\n            },\n            [_vm._v(\"Custom Layout\")]\n          ),\n          _vm._v(\".\")\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-vue extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-vue\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { pre: true, attrs: { class: \"token tag\" } }, [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"<\")]\n                ),\n                _vm._v(\"Content\")\n              ]),\n              _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"/>\")\n              ])\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Also see:\")])]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\n          \"li\",\n          [\n            _c(\n              \"router-link\",\n              {\n                attrs: {\n                  to: \"/vuepress/tutorials/custom-themes.html#content-outlet\"\n                }\n              },\n              [_vm._v(\"Custom Themes > Content Outlet\")]\n            )\n          ],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"badge\" } },\n        [\n          _vm._v(\"Badge \"),\n          _c(\"Badge\", { attrs: { text: \"beta\", type: \"warn\" } }),\n          _vm._v(\" \"),\n          _c(\"Badge\", { attrs: { text: \"0.10.1+\" } })\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [_c(\"strong\", [_vm._v(\"Props\")]), _vm._v(\":\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [_c(\"code\", [_vm._v(\"text\")]), _vm._v(\" - string\")]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"type\")]),\n              _vm._v(\" - string, optional value: \"),\n              _c(\"code\", [_vm._v('\"tip\"|\"warn\"|\"error\"')]),\n              _vm._v(\", defaults to \"),\n              _c(\"code\", [_vm._v('\"tip\"')]),\n              _vm._v(\".\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"vertical\")]),\n              _vm._v(\" - string, optional value: \"),\n              _c(\"code\", [_vm._v('\"top\"|\"middle\"')]),\n              _vm._v(\", defaults to \"),\n              _c(\"code\", [_vm._v('\"top\"')]),\n              _vm._v(\".\")\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_c(\"strong\", [_vm._v(\"Usage\")]), _vm._v(\":\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"You can use this component in header to add some status for some API:\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-md extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-md\" } }, [\n          _c(\"code\", [\n            _c(\n              \"span\",\n              { pre: true, attrs: { class: \"token title important\" } },\n              [\n                _c(\n                  \"span\",\n                  { pre: true, attrs: { class: \"token punctuation\" } },\n                  [_vm._v(\"###\")]\n                ),\n                _vm._v(\n                  ' Badge <Badge text=\"beta\" type=\"warn\"/> <Badge text=\"0.10.1+\"/>'\n                )\n              ]\n            ),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"Also see:\")])]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"a\", { attrs: { href: \"#using-components-in-headers\" } }, [\n            _vm._v(\"Using Components In Headers\")\n          ])\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}