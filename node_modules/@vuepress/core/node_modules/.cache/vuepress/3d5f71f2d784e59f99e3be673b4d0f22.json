{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\currency.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\currency.vue","mtime":1553960250114},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport bFormInput from 'bootstrap-vue/es/components/form-input/form-input';\r\n\r\nexport default {\r\n    components: {\r\n        bFormInput,\r\n    },\r\n    props: {\r\n        id: {\r\n            type: String,\r\n        },\r\n        plaintext: {\r\n            type: String,\r\n        },\r\n        maxlength: {\r\n            type: Number,\r\n        },\r\n        label: {\r\n            type: String,\r\n        },\r\n        labelFor: {\r\n            type: String,\r\n        },\r\n        value: {\r\n            type: String,\r\n        },\r\n        validation: {\r\n            type: String,\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n        },\r\n        helpText: String,\r\n    },\r\n    methods: {\r\n        onInput (value) {\r\n            this.$emit('input', value);\r\n        },\r\n    },\r\n    computed: {\r\n        classObject () {\r\n            if (this.validation) {\r\n                return {\r\n                    'v-required': this.validation.substring(0, 8) === 'required',\r\n                };\r\n            }\r\n        },\r\n    },\r\n};\r\n",{"version":3,"sources":["currency.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"currency.vue","sourceRoot":"docs/.vuepress/components/forms/common","sourcesContent":["<template>\r\n<UCMSFormGroup :id=\"'lbl' + id\" :label=\"label\" :label-for=\"id\" :class=\"classObject\">\r\n    <b-input-group prepend=\"$\">\r\n        <b-form-input :data-vv-as=\"label\" v-validate=\"validation\" :name=\"id\" :maxlength=\"maxlength\" @input=\"onInput\" :value=\"value\" :disabled=\"disabled\" :plaintext=\"plaintext\" :id=\"id\" :class=\"{ 'is-invalid': errors.has('txt' + id) }\" class=\"text-right\" />\r\n    </b-input-group>\r\n    <b-form-text :id=\"'hlp' + id\">{{helpText}}</b-form-text>\r\n    <div class=\"invalid-feedback\">{{ errors.first(id) }}</div>\r\n</UCMSFormGroup>\r\n</template>\r\n\r\n<script>\r\nimport bFormInput from 'bootstrap-vue/es/components/form-input/form-input';\r\n\r\nexport default {\r\n    components: {\r\n        bFormInput,\r\n    },\r\n    props: {\r\n        id: {\r\n            type: String,\r\n        },\r\n        plaintext: {\r\n            type: String,\r\n        },\r\n        maxlength: {\r\n            type: Number,\r\n        },\r\n        label: {\r\n            type: String,\r\n        },\r\n        labelFor: {\r\n            type: String,\r\n        },\r\n        value: {\r\n            type: String,\r\n        },\r\n        validation: {\r\n            type: String,\r\n        },\r\n        disabled: {\r\n            type: Boolean,\r\n        },\r\n        helpText: String,\r\n    },\r\n    methods: {\r\n        onInput (value) {\r\n            this.$emit('input', value);\r\n        },\r\n    },\r\n    computed: {\r\n        classObject () {\r\n            if (this.validation) {\r\n                return {\r\n                    'v-required': this.validation.substring(0, 8) === 'required',\r\n                };\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n"]}]}