{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\date.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\date.vue","mtime":1553960250116},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _Object$assign from \"C:\\\\Users\\\\bclonan\\\\Documents\\\\GitHub\\\\HOCWrapperTuts\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nexport default {\n  name: 'Calendar',\n  props: {\n    disabled: Boolean,\n    value: {\n      type: String\n    },\n    helpText: {\n      type: String,\n      default: 'MM/DD/YYYY'\n    },\n    id: {\n      type: String\n    },\n    label: {\n      type: String\n    },\n    labelFor: {\n      type: String\n    },\n    validation: {\n      type: String\n    },\n    inputFormat: {\n      type: String,\n      default: 'String'\n    },\n    outputFormat: {\n      type: String,\n      default: 'String'\n    },\n    specificStringFormat: {\n      type: String,\n      default: null\n    }\n  },\n  watch: {\n    value: function value(_value) {\n      this.selectedDates = new Date(_value);\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  data: function data() {\n    return {\n      selectedDates: null,\n      visibility: 'hidden',\n      valueTemp: null\n    };\n  },\n  mounted: function mounted() {\n    if (this.value !== null) {\n      this.valueTemp = _Object$assign(this.value);\n\n      if (this.inputFormat === 'unix') {\n        this.valueTemp = this.valueTemp.toString().slice(0, -3);\n        this.valueTemp = moment.unix(this.valueTemp).format('MM/DD/YYYY');\n        this.valueTemp = new Date(this.valueTemp);\n      } else {\n        this.valueTemp = moment(String(this.valueTemp)).format('MM/DD/YYYY');\n        this.valueTemp = new Date(this.valueTemp);\n      }\n\n      this.selectedDates = this.valueTemp;\n    } else {\n      this.selectedDates = this.value;\n    }\n  },\n  methods: {\n    handleInput: function handleInput(e) {\n      if (this.outputFormat === 'String' && this.specificStringFormat != null) {\n        this.selectedDates = moment(String(this.selectedDates)).format(this.specificStringFormat);\n      } else {\n        this.selectedDates = moment(this.selectedDates).format('MM/DD/YYYY');\n      } // Logic can be added here if we need back some other format output from this component\n\n\n      this.$emit('input', this.selectedDates);\n      this.$emit('changed');\n    },\n    openCalendar: function openCalendar() {\n      this.visibility = 'visible';\n    },\n    closeCalendar: function closeCalendar() {\n      this.visibility = 'hidden';\n    },\n    toggleCalendar: function toggleCalendar() {\n      this.visibility = this.visibility === 'hidden' ? 'visible' : 'hidden';\n    }\n  },\n  computed: {\n    classObject: function classObject() {\n      if (this.validation) {\n        return {\n          'v-required': this.validation.substring(0, 8) === 'required'\n        };\n      }\n    }\n  }\n};",{"version":3,"sources":["date.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAA,MAAA,MAAA,QAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,OADA;AAEA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAFA;AAKA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KATA;AAYA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAZA;AAeA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAfA;AAkBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAlBA;AAqBA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KArBA;AAyBA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAzBA;AA6BA,IAAA,oBAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AA7BA,GAFA;AAoCA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,MADA,EACA;AACA,WAAA,aAAA,GAAA,IAAA,IAAA,CAAA,MAAA,CAAA;AACA;AAHA,GApCA;AAyCA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA,OADA;AAEA,IAAA,KAAA,EAAA;AAFA,GAzCA;AA6CA,EAAA,IA7CA,kBA6CA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,QAFA;AAGA,MAAA,SAAA,EAAA;AAHA,KAAA;AAKA,GAnDA;AAoDA,EAAA,OApDA,qBAoDA;AACA,QAAA,KAAA,KAAA,KAAA,IAAA,EAAA;AACA,WAAA,SAAA,GAAA,eAAA,KAAA,KAAA,CAAA;;AACA,UAAA,KAAA,WAAA,KAAA,MAAA,EAAA;AACA,aAAA,SAAA,GAAA,KAAA,SAAA,CAAA,QAAA,GAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,aAAA,SAAA,GAAA,MAAA,CAAA,IAAA,CAAA,KAAA,SAAA,EAAA,MAAA,CAAA,YAAA,CAAA;AACA,aAAA,SAAA,GAAA,IAAA,IAAA,CAAA,KAAA,SAAA,CAAA;AACA,OAJA,MAIA;AACA,aAAA,SAAA,GAAA,MAAA,CAAA,MAAA,CAAA,KAAA,SAAA,CAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA,aAAA,SAAA,GAAA,IAAA,IAAA,CAAA,KAAA,SAAA,CAAA;AACA;;AACA,WAAA,aAAA,GAAA,KAAA,SAAA;AACA,KAXA,MAWA;AACA,WAAA,aAAA,GAAA,KAAA,KAAA;AACA;AACA,GAnEA;AAoEA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,CADA,EACA;AACA,UAAA,KAAA,YAAA,KAAA,QAAA,IAAA,KAAA,oBAAA,IAAA,IAAA,EAAA;AACA,aAAA,aAAA,GAAA,MAAA,CAAA,MAAA,CAAA,KAAA,aAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,oBAAA,CAAA;AACA,OAFA,MAEA;AACA,aAAA,aAAA,GAAA,MAAA,CAAA,KAAA,aAAA,CAAA,CAAA,MAAA,CAAA,YAAA,CAAA;AACA,OALA,CAOA;;;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,aAAA;AACA,WAAA,KAAA,CAAA,SAAA;AACA,KAXA;AAYA,IAAA,YAZA,0BAYA;AACA,WAAA,UAAA,GAAA,SAAA;AACA,KAdA;AAeA,IAAA,aAfA,2BAeA;AACA,WAAA,UAAA,GAAA,QAAA;AACA,KAjBA;AAkBA,IAAA,cAlBA,4BAkBA;AACA,WAAA,UAAA,GAAA,KAAA,UAAA,KAAA,QAAA,GAAA,SAAA,GAAA,QAAA;AACA;AApBA,GApEA;AA0FA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,eAAA;AACA,wBAAA,KAAA,UAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA;AADA,SAAA;AAGA;AACA;AAPA;AA1FA,CAAA","sourcesContent":["<template>\r\n<UCMSFormGroup :id=\"'lbl' + id\" :label=\"label\" :label-for=\"id\" :class=\"classObject\">\r\n    <v-date-picker mode='single' v-model='selectedDates' @dayclick='toggleCalendar' :popover-visibility=\"visibility\" @input=\"handleInput\">\r\n        <div class=\"input-group date-control\" slot-scope='{ inputValue, updateValue }'>\r\n            <input\r\n                type=\"text\"\r\n                :disabled=\"disabled\"\r\n                :id=\"id\"\r\n                :name=\"id\"\r\n                :data-vv-as=\"label\"\r\n                v-validate=\"validation\"\r\n                class=\"form-control calendar-input\"\r\n                :aria-describedby=\"'hlp' + id\"\r\n                @keyup.esc='updateValue(selectedDates, { formatInput: false, hidePopover: true })'\r\n                @input='updateValue($event.target.value, { formatInput: false, hidePopover: true })'\r\n                @change='updateValue($event.target.value, { formatInput: false, hidePopover: true })'\r\n                @blur=\"closeCalendar()\"\r\n                :value=\"inputValue\" />\r\n            <div class=\"input-group-append\">\r\n                <b-link class=\"input-group-text\" @click=\"toggleCalendar\"><i class=\"fa fa-calendar\"></i><span class=\"sr-only\">Open the {{label}} Calendar.</span></b-link>\r\n            </div>\r\n        </div>\r\n    </v-date-picker>\r\n    <b-form-text :id=\"'hlp' + id\">{{helpText}}</b-form-text>\r\n    <div class=\"invalid-feedback\">{{ errors.first(id) }}</div>\r\n</UCMSFormGroup>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n\tname: 'Calendar',\r\n\tprops: {\r\n\t\tdisabled: Boolean,\r\n\t\tvalue: {\r\n\t\t\ttype: String,\r\n\t\t},\r\n\t\thelpText: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'MM/DD/YYYY',\r\n\t\t},\r\n\t\tid: {\r\n\t\t\ttype: String,\r\n\t\t},\r\n\t\tlabel: {\r\n\t\t\ttype: String,\r\n\t\t},\r\n\t\tlabelFor: {\r\n\t\t\ttype: String,\r\n\t\t},\r\n\t\tvalidation: {\r\n\t\t\ttype: String,\r\n\t\t},\r\n\t\tinputFormat: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'String',\r\n\t\t},\r\n\t\toutputFormat: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: 'String',\r\n\t\t},\r\n\t\tspecificStringFormat: {\r\n\t\t\ttype: String,\r\n\t\t\tdefault: null,\r\n\t\t},\r\n\t},\r\n\twatch: {\r\n\t\tvalue (value) {\r\n\t\t\tthis.selectedDates = new Date(value);\r\n\t\t},\r\n\t},\r\n\tmodel: {\r\n\t\tprop: 'value',\r\n\t\tevent: 'input',\r\n\t},\r\n\tdata () {\r\n\t\treturn {\r\n\t\t\tselectedDates: null,\r\n\t\t\tvisibility: 'hidden',\r\n\t\t\tvalueTemp: null,\r\n\t\t};\r\n\t},\r\n\tmounted () {\r\n\t\tif (this.value !== null) {\r\n\t\t\tthis.valueTemp = Object.assign(this.value);\r\n\t\t\tif (this.inputFormat === 'unix') {\r\n\t\t\t\tthis.valueTemp = this.valueTemp.toString().slice(0, -3);\r\n\t\t\t\tthis.valueTemp = moment.unix(this.valueTemp).format('MM/DD/YYYY');\r\n\t\t\t\tthis.valueTemp = new Date(this.valueTemp);\r\n\t\t\t} else {\r\n\t\t\t\tthis.valueTemp = moment(String(this.valueTemp)).format('MM/DD/YYYY');\r\n\t\t\t\tthis.valueTemp = new Date(this.valueTemp);\r\n\t\t\t}\r\n\t\t\tthis.selectedDates = this.valueTemp;\r\n\t\t} else {\r\n\t\t\tthis.selectedDates = this.value;\r\n\t\t}\r\n\t},\r\n\tmethods: {\r\n\t\thandleInput (e) {\r\n\t\t\tif (this.outputFormat === 'String' && this.specificStringFormat != null) {\r\n\t\t\t\tthis.selectedDates = moment(String(this.selectedDates)).format(this.specificStringFormat);\r\n\t\t\t} else {\r\n\t\t\t\tthis.selectedDates = moment(this.selectedDates).format('MM/DD/YYYY');\r\n\t\t\t}\r\n\r\n\t\t\t// Logic can be added here if we need back some other format output from this component\r\n\t\t\tthis.$emit('input', this.selectedDates);\r\n\t\t\tthis.$emit('changed');\r\n\t\t},\r\n\t\topenCalendar () {\r\n\t\t\tthis.visibility = 'visible';\r\n\t\t},\r\n\t\tcloseCalendar () {\r\n\t\t\tthis.visibility = 'hidden';\r\n\t\t},\r\n\t\ttoggleCalendar () {\r\n\t\t\tthis.visibility = this.visibility === 'hidden' ? 'visible' : 'hidden';\r\n\t\t},\r\n\t},\r\n\tcomputed: {\r\n\t\tclassObject () {\r\n\t\t\tif (this.validation) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t'v-required': this.validation.substring(0, 8) === 'required',\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n"],"sourceRoot":"docs/.vuepress/components/forms/common"}]}