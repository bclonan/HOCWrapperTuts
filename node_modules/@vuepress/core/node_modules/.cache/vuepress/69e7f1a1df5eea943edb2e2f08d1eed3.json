{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\checkbox-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\checkbox-group.vue","mtime":1553960250107},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport BFormCheckboxGroup from 'bootstrap-vue/es/components/form-checkbox/form-checkbox-group';\r\n\r\nexport default {\r\n    mounted () {\r\n    },\r\n    components: {\r\n        BFormCheckboxGroup,\r\n    },\r\n    props: {\r\n        value: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        checked: Boolean,\r\n        id: {\r\n            type: String,\r\n        },\r\n        name: {\r\n            type: String,\r\n        },\r\n        label: {\r\n            type: String,\r\n        },\r\n        labelFor: {\r\n            type: String,\r\n        },\r\n        checkedValue: {\r\n            type: String,\r\n            default: 'Y',\r\n        },\r\n        unchecked: {\r\n            type: String,\r\n            default: 'N',\r\n        },\r\n        validation: {\r\n            type: String,\r\n        },\r\n        options: {\r\n             type: String,\r\n        },\r\n    },\r\n    methods: {\r\n        classObject () {\r\n            if (this.validation === 'required') {\r\n                this.customValidation = 'customChkBox';\r\n            }\r\n            if (this.validation) {\r\n                return {\r\n                    'v-required': this.validation.substring(0, 8) === 'required',\r\n                };\r\n            }\r\n        },\r\n        onInput (value) {\r\n            // self = this;\r\n            this.$emit('input', value);\r\n        },\r\n    },\r\n    watch: {\r\n        value (value) {\r\n            if (!(this.isNull)) {\r\n                this.backup = value;\r\n            }\r\n            if (value === null) {\r\n                this.isNull = true;\r\n            }\r\n            this.valueLocal = value;\r\n            if (this.valueLocal == null && this.validation === 'required') {\r\n                this.valueLocal = 'N';\r\n            }\r\n        },\r\n    },\r\n    data () {\r\n        return {\r\n            valueLocal: null,\r\n            customValidation: '',\r\n            // self: null,\r\n            backup: null,\r\n            isNull: false,\r\n        };\r\n    },\r\n};\r\n",{"version":3,"sources":["checkbox-group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"checkbox-group.vue","sourceRoot":"docs/.vuepress/components/forms/common","sourcesContent":["<template>\r\n<UCMSFormGroup\r\n  :class=\"classObject\"\r\n  :id=\"'lbl' + id\"\r\n  :label=\"label\"\r\n  :label-for=\"id\">\r\n    <b-form-checkbox-group\r\n        :id=\"id\"\r\n        :name=\"name\"\r\n        v-model=\"valueLocal\"\r\n        :options=\"options\"\r\n        v-validate=\"customValidation\"\r\n        :class=\"{\r\n            'input':true,\r\n            'is-invalid': errors.has(name)\r\n        }\"\r\n        :unchecked-value=\"unchecked\"\r\n        :value=\"checkedValue\"\r\n        @change=\"$emit('input', $event)\"\r\n        @input=\"onInput\">\r\n    </b-form-checkbox-group>\r\n    <div class=\"invalid-feedback\" v-show=\"errors.has(name)\">{{ errors.first(name) }}</div>\r\n    </UCMSFormGroup>\r\n</template>\r\n<script>\r\nimport BFormCheckboxGroup from 'bootstrap-vue/es/components/form-checkbox/form-checkbox-group';\r\n\r\nexport default {\r\n    mounted () {\r\n    },\r\n    components: {\r\n        BFormCheckboxGroup,\r\n    },\r\n    props: {\r\n        value: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        checked: Boolean,\r\n        id: {\r\n            type: String,\r\n        },\r\n        name: {\r\n            type: String,\r\n        },\r\n        label: {\r\n            type: String,\r\n        },\r\n        labelFor: {\r\n            type: String,\r\n        },\r\n        checkedValue: {\r\n            type: String,\r\n            default: 'Y',\r\n        },\r\n        unchecked: {\r\n            type: String,\r\n            default: 'N',\r\n        },\r\n        validation: {\r\n            type: String,\r\n        },\r\n        options: {\r\n             type: String,\r\n        },\r\n    },\r\n    methods: {\r\n        classObject () {\r\n            if (this.validation === 'required') {\r\n                this.customValidation = 'customChkBox';\r\n            }\r\n            if (this.validation) {\r\n                return {\r\n                    'v-required': this.validation.substring(0, 8) === 'required',\r\n                };\r\n            }\r\n        },\r\n        onInput (value) {\r\n            // self = this;\r\n            this.$emit('input', value);\r\n        },\r\n    },\r\n    watch: {\r\n        value (value) {\r\n            if (!(this.isNull)) {\r\n                this.backup = value;\r\n            }\r\n            if (value === null) {\r\n                this.isNull = true;\r\n            }\r\n            this.valueLocal = value;\r\n            if (this.valueLocal == null && this.validation === 'required') {\r\n                this.valueLocal = 'N';\r\n            }\r\n        },\r\n    },\r\n    data () {\r\n        return {\r\n            valueLocal: null,\r\n            customValidation: '',\r\n            // self: null,\r\n            backup: null,\r\n            isNull: false,\r\n        };\r\n    },\r\n};\r\n</script>\r\n"]}]}