{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\Frontend\\Axios.md?vue&type=template&id=4be53a0e&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\Frontend\\Axios.md","mtime":1553977364776},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"h2\", { attrs: { id: \"overview\" } }, [_vm._v(\"Overview\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"...\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"axios\" } }, [_vm._v(\"Axios\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://github.com/axios/axios\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\"\n            }\n          },\n          [_vm._v(\"Github\"), _c(\"OutboundLink\")],\n          1\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"Promise based HTTP client for the browser and node.js\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"em\", [_vm._v(\"Install\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-sh extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-sh\" } }, [\n          _c(\"code\", [\n            _vm._v(\"$ \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"npm\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\" axios\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [_c(\"em\", [_vm._v(\"CDN\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"<\")\n            ]),\n            _vm._v(\"script src\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"https://unpkg.com/axios/dist/axios.min.js\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\">\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"<\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"/\")\n            ]),\n            _vm._v(\"script\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\">\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h1\", { attrs: { id: \"examples\" } }, [_vm._v(\"Examples\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"axios-vue-markdown\" } }, [\n        _vm._v(\"Axios Vue Markdown\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"em\", [_vm._v(\"Simple get with axios\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"input\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              '<template>\\n <div>\\n  <ul v-if=\"posts && posts.length\">\\n    <li v-for=\"post of posts\">\\n      <p><strong>{{post.title}}</strong></p>\\n      <p>{{post.body}}</p>\\n    </li>\\n  </ul>\\n   <button class=\"button\" @click=\"GetPosts\">Click to Get Posts</button>\\n  <ul v-if=\"errors && errors.length\">\\n    <li v-for=\"error of errors\">\\n      {{error.message}}\\n    </li>\\n  </ul>\\n</div>\\n</template>\\n\\n<script>\\nimport axios from \\'axios\\';\\n\\nexport default {\\n  data() {\\n    return {\\n      posts: [],\\n      errors: []\\n    }\\n  },\\n  methods : {\\n      GetPosts () {\\n            // Fetches posts when the component is created.\\n  \\n    axios.get(`http://jsonplaceholder.typicode.com/posts`)\\n    .then(response => {\\n      // JSON responses are automatically parsed.\\n      this.posts = response.data\\n    })\\n    .catch(e => {\\n      this.errors.push(e)\\n    })\\n\\n    // async / await version (created() becomes async created())\\n    //\\n    // try {\\n    //   const response = await axios.get(`http://jsonplaceholder.typicode.com/posts`)\\n    //   this.posts = response.data\\n    // } catch (e) {\\n    //   this.errors.push(e)\\n    // }\\n      }\\n  }\\n}\\n</script>\\n\\n'\n            )\n          ])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"output\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [_vm._v(\"<libraries-axios-simpleAxios/>\\n\")])\n        ])\n      ]),\n      _c(\"libraries-axios-simpleAxios\"),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"em\", [_vm._v(\"push data with post\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"input\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              '<template>\\n  <input type=\"text\" v-model=\"postBody\" @change=\"postPost()\"/>\\n  <ul v-if=\"errors && errors.length\">\\n    <li v-for=\"error of errors\">\\n      {{error.message}}\\n    </li>\\n  </ul>\\n</template>\\n\\n<script>\\nimport axios from \\'axios\\';\\n\\nexport default {\\n  data() {\\n    return {\\n      postBody: \\'\\',\\n      errors: []\\n    }\\n  },\\n\\n  // Pushes posts to the server when called.\\n  postPost() {\\n    axios.post(`http://jsonplaceholder.typicode.com/posts`, {\\n      body: this.postBody\\n    })\\n    .then(response => {})\\n    .catch(e => {\\n      this.errors.push(e)\\n    })\\n\\n    // async / await version (postPost() becomes async postPost())\\n    //\\n    // try {\\n    //   await axios.post(`http://jsonplaceholder.typicode.com/posts`, {\\n    //     body: this.postBody\\n    //   })\\n    // } catch (e) {\\n    //   this.errors.push(e)\\n    // }\\n  }\\n}\\n</script>\\n'\n            )\n          ])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"output\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [_vm._v(\"<libraries-axios-simplePost/>\\n\")])\n        ])\n      ]),\n      _c(\"libraries-axios-simplePost\"),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"links\" } }, [_vm._v(\"Links\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://github.com/possibly1/\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"Repository\"), _c(\"OutboundLink\")],\n            1\n          )\n        ])\n      ])\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}