{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\file-input.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\file-input.vue","mtime":1553960250119},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport bFormInput from 'bootstrap-vue/es/components/form-input/form-input';\r\n\r\nexport default {\r\n    components: { bFormInput },\r\n    props: {\r\n        accept: String,\r\n        browseText: String,\r\n        disabled: Boolean,\r\n        helpText: String,\r\n        id: String,\r\n        label: String,\r\n        labelFor: String,\r\n        maxlength: String,\r\n        multiple: Boolean,\r\n        plaintext: String,\r\n        placeholder: {\r\n          default: 'No file selected',\r\n          type: String,\r\n        },\r\n        required: Boolean,\r\n        validation: String,\r\n        value: Object,\r\n    },\r\n    methods: {\r\n        isInvalid (errors) {\r\n          return { 'is-invalid': errors.has(`txt${this.id}`) };\r\n        },\r\n        onChange (value) {\r\n          this.$emit('change', value);\r\n        },\r\n        onInput (value) {\r\n          this.$emit('input', value);\r\n        },\r\n    },\r\n    computed: {\r\n        classObject () {\r\n            if (this.validation) {\r\n                return {\r\n                    'v-required': this.validation.substring(0, 8) === 'required',\r\n                };\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n      value (file) {\r\n        // This will remove selected file from input\r\n        if (file === null) this.$refs.file.reset();\r\n      },\r\n    },\r\n};\r\n",{"version":3,"sources":["file-input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"file-input.vue","sourceRoot":"docs/.vuepress/components/forms/common","sourcesContent":["<template>\r\n  <UCMSFormGroup\r\n    :class=\"classObject\"\r\n    :id=\"`lbl${id}`\"\r\n    :label=\"label\"\r\n    :label-for=\"id\">\r\n      <b-form-file\r\n        class=\"text-truncate\"\r\n        ref=\"file\"\r\n        v-validate=\"validation\"\r\n        :browse-text=\"browseText\"\r\n        :class=\"isInvalid(errors)\"\r\n        :disabled=\"disabled\"\r\n        :id=\"id\"\r\n        :maxlength=\"maxlength\"\r\n        :name=\"id\"\r\n        :plaintext=\"plaintext\"\r\n        :placeholder=\"placeholder\"\r\n        :value=\"value\"\r\n        @change=\"onChange\"\r\n        @input=\"onInput\" />\r\n      <b-form-text\r\n        :id=\"`hlp${id}`\">\r\n        {{helpText}}\r\n      </b-form-text>\r\n      <div class=\"invalid-feedback\">{{errors.first(this.id)}}</div>\r\n  </UCMSFormGroup>\r\n</template>\r\n\r\n<script>\r\nimport bFormInput from 'bootstrap-vue/es/components/form-input/form-input';\r\n\r\nexport default {\r\n    components: { bFormInput },\r\n    props: {\r\n        accept: String,\r\n        browseText: String,\r\n        disabled: Boolean,\r\n        helpText: String,\r\n        id: String,\r\n        label: String,\r\n        labelFor: String,\r\n        maxlength: String,\r\n        multiple: Boolean,\r\n        plaintext: String,\r\n        placeholder: {\r\n          default: 'No file selected',\r\n          type: String,\r\n        },\r\n        required: Boolean,\r\n        validation: String,\r\n        value: Object,\r\n    },\r\n    methods: {\r\n        isInvalid (errors) {\r\n          return { 'is-invalid': errors.has(`txt${this.id}`) };\r\n        },\r\n        onChange (value) {\r\n          this.$emit('change', value);\r\n        },\r\n        onInput (value) {\r\n          this.$emit('input', value);\r\n        },\r\n    },\r\n    computed: {\r\n        classObject () {\r\n            if (this.validation) {\r\n                return {\r\n                    'v-required': this.validation.substring(0, 8) === 'required',\r\n                };\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n      value (file) {\r\n        // This will remove selected file from input\r\n        if (file === null) this.$refs.file.reset();\r\n      },\r\n    },\r\n};\r\n</script>\r\n"]}]}