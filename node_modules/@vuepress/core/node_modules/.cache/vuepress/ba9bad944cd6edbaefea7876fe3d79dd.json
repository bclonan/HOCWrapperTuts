{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\libraries\\axios\\simpleAxios.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\libraries\\axios\\simpleAxios.vue","mtime":1553976998355},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'simpleAxios',\n  data: function data() {\n    return {\n      posts: [],\n      errors: []\n    };\n  },\n  methods: {\n    GetPosts: function GetPosts() {\n      var _this = this;\n\n      // Fetches posts when the component is created.\n      axios.get(\"http://jsonplaceholder.typicode.com/posts\").then(function (response) {\n        // JSON responses are automatically parsed.\n        _this.posts = response.data;\n      }).catch(function (e) {\n        _this.errors.push(e);\n      }); // async / await version (created() becomes async created())\n      //\n      // try {\n      //   const response = await axios.get(`http://jsonplaceholder.typicode.com/posts`)\n      //   this.posts = response.data\n      // } catch (e) {\n      //   this.errors.push(e)\n      // }\n    }\n  }\n};",{"version":3,"sources":["simpleAxios.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA;AAEA,MAAA,KAAA,CAAA,GAAA,8CACA,IADA,CACA,UAAA,QAAA,EAAA;AACA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA;AACA,OAJA,EAKA,KALA,CAKA,UAAA,CAAA,EAAA;AACA,QAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACA,OAPA,EAHA,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AARA,CAAA","sourcesContent":["<template>\r\n <div>\r\n  <ul v-if=\"posts && posts.length\">\r\n    <li v-for=\"post of posts\">\r\n      <p><strong>{{post.title}}</strong></p>\r\n      <p>{{post.body}}</p>\r\n    </li>\r\n  </ul>\r\n   <button class=\"button\" @click=\"GetPosts\">Click to Get Posts</button>\r\n  <ul v-if=\"errors && errors.length\">\r\n    <li v-for=\"error of errors\">\r\n      {{error.message}}\r\n    </li>\r\n  </ul>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'simpleAxios',\r\n  data() {\r\n    return {\r\n      posts: [],\r\n      errors: []\r\n    }\r\n  },\r\n  methods : {\r\n      GetPosts () {\r\n            // Fetches posts when the component is created.\r\n  \r\n    axios.get(`http://jsonplaceholder.typicode.com/posts`)\r\n    .then(response => {\r\n      // JSON responses are automatically parsed.\r\n      this.posts = response.data\r\n    })\r\n    .catch(e => {\r\n      this.errors.push(e)\r\n    })\r\n\r\n    // async / await version (created() becomes async created())\r\n    //\r\n    // try {\r\n    //   const response = await axios.get(`http://jsonplaceholder.typicode.com/posts`)\r\n    //   this.posts = response.data\r\n    // } catch (e) {\r\n    //   this.errors.push(e)\r\n    // }\r\n      }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n@import './styles/config.styl';\r\n.button\r\n  background-color $backgroundcolor\r\n  color white\r\n  border 1px solid #eee\r\n  border-radius 0.5rem\r\n  box-shadow 0 5px 15px -5px rgba(0,0,0,.1)\r\n  padding 0.5rem\r\n  margin-top 1em\r\n</style>"],"sourceRoot":"docs/.vuepress/components/libraries/axios"}]}