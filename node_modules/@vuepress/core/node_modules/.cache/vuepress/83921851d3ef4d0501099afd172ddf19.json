{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\select.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\select.vue","mtime":1553960250135},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport bFormSelect from 'bootstrap-vue/es/components/form-select/form-select';\nimport { mapKeys } from 'lodash';\nexport default {\n  components: {\n    bFormSelect: bFormSelect\n  },\n  props: {\n    disabled: Boolean,\n    selectValue: {\n      type: String,\n      default: 'ctryCd'\n    },\n    selectText: {\n      type: String,\n      default: 'description'\n    },\n    options: {\n      type: Array\n    },\n    id: {\n      type: String\n    },\n    maxlength: {\n      type: String\n    },\n    placeholderText: {\n      type: String,\n      default: '- Select One -'\n    },\n    label: {\n      type: String\n    },\n    labelFor: {\n      type: String\n    },\n    value: {\n      type: String,\n      default: null\n    },\n    validation: {\n      type: String\n    },\n    selectSize: String,\n    multiple: String,\n    helpText: String\n  },\n  methods: {\n    onInput: function onInput(value) {\n      if (value != null) {\n        this.$emit('input', value.toString());\n      } else {\n        this.$emit('input', null);\n      }\n    }\n  },\n  computed: {\n    classObject: function classObject() {\n      if (this.validation) {\n        return {\n          'v-required': this.validation.substring(0, 8) === 'required'\n        };\n      } else {\n        return this.validation;\n      }\n    },\n    newOptions: function newOptions(options) {\n      var _this = this;\n\n      var dataTemp = [];\n\n      for (var i = 0; i < this.options.length; i++) {\n        dataTemp[i] = mapKeys(this.options[i], function (value, key) {\n          if (key === _this.selectValue) {\n            return 'value';\n          }\n\n          if (key === _this.selectText) {\n            return 'text';\n          }\n\n          return key;\n        });\n      }\n\n      return dataTemp;\n    }\n  }\n};",{"version":3,"sources":["select.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAaA,OAAA,WAAA,MAAA,qDAAA;AACA,SACA,OADA,QAEA,QAFA;AAIA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AADA,GADA;AAIA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,OADA;AAEA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAFA;AAMA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KANA;AAUA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAVA;AAaA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAbA;AAgBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAhBA;AAmBA,IAAA,eAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAnBA;AAuBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAvBA;AA0BA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KA1BA;AA6BA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA7BA;AAiCA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAjCA;AAoCA,IAAA,UAAA,EAAA,MApCA;AAqCA,IAAA,QAAA,EAAA,MArCA;AAsCA,IAAA,QAAA,EAAA;AAtCA,GAJA;AA4CA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,KADA,EACA;AACA,UAAA,KAAA,IAAA,IAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA,CAAA,QAAA,EAAA;AACA,OAFA,MAEA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,IAAA;AACA;AACA;AAPA,GA5CA;AAqDA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,eAAA;AACA,wBAAA,KAAA,UAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA;AADA,SAAA;AAGA,OAJA,MAIA;AACA,eAAA,KAAA,UAAA;AACA;AACA,KATA;AAUA,IAAA,UAVA,sBAUA,OAVA,EAUA;AAAA;;AACA,UAAA,QAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,OAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,QAAA,QAAA,CAAA,CAAA,CAAA,GAAA,OAAA,CAAA,KAAA,OAAA,CAAA,CAAA,CAAA,EAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,cAAA,GAAA,KAAA,KAAA,CAAA,WAAA,EAAA;AACA,mBAAA,OAAA;AACA;;AACA,cAAA,GAAA,KAAA,KAAA,CAAA,UAAA,EAAA;AACA,mBAAA,MAAA;AACA;;AACA,iBAAA,GAAA;AACA,SARA,CAAA;AASA;;AACA,aAAA,QAAA;AACA;AAxBA;AArDA,CAAA","sourcesContent":["<template>\r\n<UCMSFormGroup :class=\"classObject\" :id=\"`lbl${id}`\" :label=\"label\" :label-for=\"`dd${id}`\">\r\n\t<b-form-select :id=\"`dd${id}`\" v-validate=\"validation\" :class=\"{ 'is-invalid': errors.has('dd' + id) }\" :disabled=\"disabled\" :name=\"id\" :options=\"newOptions\" :value=\"value\" @input=\"onInput\" :select-size=\"selectSize\" :multiple=\"multiple\">\r\n\t\t<template slot=\"first\">\r\n\t\t\t<option :value=\"null\">{{placeholderText}}</option>\r\n\t\t</template>\r\n\t</b-form-select>\r\n\t<b-form-text :id=\"'hlp' + id\">{{helpText}}</b-form-text>\r\n\t<div class=\"invalid-feedback\">{{ errors.first(id) }}</div>\r\n</UCMSFormGroup>\r\n</template>\r\n\r\n<script>\r\nimport bFormSelect from 'bootstrap-vue/es/components/form-select/form-select';\r\nimport {\r\n\tmapKeys,\r\n} from 'lodash';\r\n\r\nexport default {\r\n    components: {\r\n        bFormSelect,\r\n    },\r\n    props: {\r\n        disabled: Boolean,\r\n        selectValue: {\r\n            type: String,\r\n            default: 'ctryCd',\r\n        },\r\n        selectText: {\r\n            type: String,\r\n            default: 'description',\r\n        },\r\n        options: {\r\n            type: Array,\r\n        },\r\n        id: {\r\n            type: String,\r\n        },\r\n        maxlength: {\r\n            type: String,\r\n        },\r\n        placeholderText: {\r\n            type: String,\r\n            default: '- Select One -',\r\n        },\r\n        label: {\r\n            type: String,\r\n        },\r\n        labelFor: {\r\n            type: String,\r\n        },\r\n        value: {\r\n            type: String,\r\n            default: null,\r\n        },\r\n        validation: {\r\n            type: String,\r\n        },\r\n        selectSize: String,\r\n        multiple: String,\r\n        helpText: String,\r\n    },\r\n    methods: {\r\n        onInput (value) {\r\n        \tif(value !=null) {\r\n        \t\tthis.$emit('input', value.toString());\r\n        \t} else {\r\n            \tthis.$emit('input', null);\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        classObject () {\r\n            if (this.validation) {\r\n                return {\r\n                    'v-required': this.validation.substring(0, 8) === 'required',\r\n                };\r\n            } else {\r\n\t\t\t\treturn this.validation;\r\n\t\t\t}\r\n        },\r\n        newOptions (options) {\r\n            const dataTemp = [];\r\n            for (let i = 0; i < this.options.length; i++) {\r\n                dataTemp[i] = mapKeys(this.options[i], (value, key) => {\r\n                    if (key === this.selectValue) {\r\n                        return 'value';\r\n                    }\r\n                    if (key === this.selectText) {\r\n                        return 'text';\r\n                    }\r\n                    return key;\r\n                });\r\n            }\r\n            return dataTemp;\r\n        },\r\n    },\r\n};\r\n</script>\r\n"],"sourceRoot":"docs/.vuepress/components/forms/common"}]}