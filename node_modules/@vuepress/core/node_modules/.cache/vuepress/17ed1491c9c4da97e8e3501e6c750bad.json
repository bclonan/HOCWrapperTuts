{"remainingRequest":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\file-input.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\docs\\.vuepress\\components\\forms\\common\\file-input.vue","mtime":1553960250119},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\bclonan\\Documents\\GitHub\\HOCWrapperTuts\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport bFormInput from 'bootstrap-vue/es/components/form-input/form-input';\nexport default {\n  components: {\n    bFormInput: bFormInput\n  },\n  props: {\n    accept: String,\n    browseText: String,\n    disabled: Boolean,\n    helpText: String,\n    id: String,\n    label: String,\n    labelFor: String,\n    maxlength: String,\n    multiple: Boolean,\n    plaintext: String,\n    placeholder: {\n      default: 'No file selected',\n      type: String\n    },\n    required: Boolean,\n    validation: String,\n    value: Object\n  },\n  methods: {\n    isInvalid: function isInvalid(errors) {\n      return {\n        'is-invalid': errors.has(\"txt\".concat(this.id))\n      };\n    },\n    onChange: function onChange(value) {\n      this.$emit('change', value);\n    },\n    onInput: function onInput(value) {\n      this.$emit('input', value);\n    }\n  },\n  computed: {\n    classObject: function classObject() {\n      if (this.validation) {\n        return {\n          'v-required': this.validation.substring(0, 8) === 'required'\n        };\n      }\n    }\n  },\n  watch: {\n    value: function value(file) {\n      // This will remove selected file from input\n      if (file === null) this.$refs.file.reset();\n    }\n  }\n};",{"version":3,"sources":["file-input.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,UAAA,MAAA,mDAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,UAAA,EAAA;AAAA,GADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA,MADA;AAEA,IAAA,UAAA,EAAA,MAFA;AAGA,IAAA,QAAA,EAAA,OAHA;AAIA,IAAA,QAAA,EAAA,MAJA;AAKA,IAAA,EAAA,EAAA,MALA;AAMA,IAAA,KAAA,EAAA,MANA;AAOA,IAAA,QAAA,EAAA,MAPA;AAQA,IAAA,SAAA,EAAA,MARA;AASA,IAAA,QAAA,EAAA,OATA;AAUA,IAAA,SAAA,EAAA,MAVA;AAWA,IAAA,WAAA,EAAA;AACA,MAAA,OAAA,EAAA,kBADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAXA;AAeA,IAAA,QAAA,EAAA,OAfA;AAgBA,IAAA,UAAA,EAAA,MAhBA;AAiBA,IAAA,KAAA,EAAA;AAjBA,GAFA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,MADA,EACA;AACA,aAAA;AAAA,sBAAA,MAAA,CAAA,GAAA,cAAA,KAAA,EAAA;AAAA,OAAA;AACA,KAHA;AAIA,IAAA,QAJA,oBAIA,KAJA,EAIA;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA,KANA;AAOA,IAAA,OAPA,mBAOA,KAPA,EAOA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA;AATA,GArBA;AAgCA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,eAAA;AACA,wBAAA,KAAA,UAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,MAAA;AADA,SAAA;AAGA;AACA;AAPA,GAhCA;AAyCA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,IADA,EACA;AACA;AACA,UAAA,IAAA,KAAA,IAAA,EAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AACA;AAJA;AAzCA,CAAA","sourcesContent":["<template>\r\n  <UCMSFormGroup\r\n    :class=\"classObject\"\r\n    :id=\"`lbl${id}`\"\r\n    :label=\"label\"\r\n    :label-for=\"id\">\r\n      <b-form-file\r\n        class=\"text-truncate\"\r\n        ref=\"file\"\r\n        v-validate=\"validation\"\r\n        :browse-text=\"browseText\"\r\n        :class=\"isInvalid(errors)\"\r\n        :disabled=\"disabled\"\r\n        :id=\"id\"\r\n        :maxlength=\"maxlength\"\r\n        :name=\"id\"\r\n        :plaintext=\"plaintext\"\r\n        :placeholder=\"placeholder\"\r\n        :value=\"value\"\r\n        @change=\"onChange\"\r\n        @input=\"onInput\" />\r\n      <b-form-text\r\n        :id=\"`hlp${id}`\">\r\n        {{helpText}}\r\n      </b-form-text>\r\n      <div class=\"invalid-feedback\">{{errors.first(this.id)}}</div>\r\n  </UCMSFormGroup>\r\n</template>\r\n\r\n<script>\r\nimport bFormInput from 'bootstrap-vue/es/components/form-input/form-input';\r\n\r\nexport default {\r\n    components: { bFormInput },\r\n    props: {\r\n        accept: String,\r\n        browseText: String,\r\n        disabled: Boolean,\r\n        helpText: String,\r\n        id: String,\r\n        label: String,\r\n        labelFor: String,\r\n        maxlength: String,\r\n        multiple: Boolean,\r\n        plaintext: String,\r\n        placeholder: {\r\n          default: 'No file selected',\r\n          type: String,\r\n        },\r\n        required: Boolean,\r\n        validation: String,\r\n        value: Object,\r\n    },\r\n    methods: {\r\n        isInvalid (errors) {\r\n          return { 'is-invalid': errors.has(`txt${this.id}`) };\r\n        },\r\n        onChange (value) {\r\n          this.$emit('change', value);\r\n        },\r\n        onInput (value) {\r\n          this.$emit('input', value);\r\n        },\r\n    },\r\n    computed: {\r\n        classObject () {\r\n            if (this.validation) {\r\n                return {\r\n                    'v-required': this.validation.substring(0, 8) === 'required',\r\n                };\r\n            }\r\n        },\r\n    },\r\n    watch: {\r\n      value (file) {\r\n        // This will remove selected file from input\r\n        if (file === null) this.$refs.file.reset();\r\n      },\r\n    },\r\n};\r\n</script>\r\n"],"sourceRoot":"docs/.vuepress/components/forms/common"}]}